# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-26 21:42
from __future__ import unicode_literals

import coup.users.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('user_auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('faculty', models.CharField(blank=True, choices=[('Sciences', 'Sciences'), ('Applied Sciences', 'Applied Sciences'), ('Business', 'Business'), ('Education', 'Education'), ('Environment', 'Environment'), ('Communication, Art and Technology', 'Communication, Art and Technology'), ('Health Sciences', 'Health Sciences'), ('Arts and Sco', 'Arts and Sco')], max_length=30)),
                ('program', models.CharField(blank=True, choices=[('Computing Science', 'Computing Science'), ('Engineering Science', 'Engineering Science'), ('Mechatronic Systems Engineering', 'Mechatronic Systems Engineering'), ('Archaeology', 'Archaeology'), ('Sustainable Community Development', 'Sustainable Community Development'), ('Environmental Science', 'Environmental Science'), ('Geography', 'Geography'), ('Resource and Environmental Management', 'Resource and Environmental Management'), ('Environment', 'Environment'), ('Heritage Resource Management', 'Heritage Resource Management'), ('Resource and Environmental Planning', 'Resource and Environmental Planning'), ('Actuarial Science and Statistics', 'Actuarial Science and Statistics'), ('Biological Sciences', 'Biological Sciences'), ('Biomedical Physiology and Kinesiology', 'Biomedical Physiology and Kinesiology'), ('Chemistry', 'Chemistry'), ('Earth Sciences', 'Earth Sciences'), ('Mathematics', 'Mathematics'), ('Molecular Biology and Biochemistry', 'Molecular Biology and Biochemistry'), ('Physics', 'Physics'), ('Statistics and Actuarial Science', 'Statistics and Actuarial Science'), ('Anthropology', 'Anthropology'), ('Asia-Canada', 'Asia-Canada'), ('Cognitive Science', 'Cognitive Science'), ('Criminology', 'Criminology'), ('Economics', 'Economics'), ('English', 'English'), ('First Nations Studies', 'First Nations Studies'), ('French Cohort', 'French Cohort'), ('French', 'French'), ("Gender, Sexuality, and Women's Studies", "Gender, Sexuality, and Women's Studies"), ('Gerontology', 'Gerontology'), ('Graduate Liberal Studies', 'Graduate Liberal Studies'), ('Hellenic Studies', 'Hellenic Studies'), ('History', 'History'), ('Humanities', 'Humanities'), ('International Studies', 'International Studies'), ('Labour Studies', 'Labour Studies'), ('Language Training', 'Language Training'), ('Latin American Studies', 'Latin American Studies'), ('Linguistics', 'Linguistics'), ('Philosophy', 'Philosophy'), ('Political Science', 'Political Science'), ('Psychology', 'Psychology'), ('Public Policy', 'Public Policy'), ('Sociology', 'Sociology'), ('Urban Studies', 'Urban Studies'), ('World Literature', 'World Literature'), ('Communication', 'Communication'), ('Contemporary Arts', 'Contemporary Arts'), ('Interactive Arts and Technology', 'Interactive Arts and Technology'), ('Publishing', 'Publishing')], max_length=30)),
                ('bio', models.TextField(blank=True, null=True)),
                ('picture', models.ImageField(default='profile_pictures/default.png', upload_to=coup.users.models.get_user_dir_path)),
                ('slug', models.SlugField()),
                ('following', models.ManyToManyField(related_name='followers', through='user_auth.Contact', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', coup.users.models.UserManager()),
            ],
        ),
    ]
